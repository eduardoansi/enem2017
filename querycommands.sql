/* Creating initial table with varchar only 
It is important to specify a diststyle because otherwise the COPY command might not work with Redshift */

create table public.dbenem (NU_INSCRICAO VARCHAR(200), NU_ANO VARCHAR(200), CO_MUNICIPIO_RESIDENCIA VARCHAR(200), NO_MUNICIPIO_RESIDENCIA VARCHAR(200), CO_UF_RESIDENCIA VARCHAR(200), SG_UF_RESIDENCIA VARCHAR(200), NU_IDADE VARCHAR(200), TP_SEXO VARCHAR(200), TP_ESTADO_CIVIL VARCHAR(200), TP_COR_RACA VARCHAR(200), TP_NACIONALIDADE VARCHAR(200), CO_MUNICIPIO_NASCIMENTO VARCHAR(200), NO_MUNICIPIO_NASCIMENTO VARCHAR(200), CO_UF_NASCIMENTO VARCHAR(200), SG_UF_NASCIMENTO VARCHAR(200), TP_ST_CONCLUSAO VARCHAR(200), TP_ANO_CONCLUIU VARCHAR(200), TP_ESCOLA VARCHAR(200), TP_ENSINO VARCHAR(200), IN_TREINEIRO VARCHAR(200), CO_ESCOLA VARCHAR(200), CO_MUNICIPIO_ESC VARCHAR(200), NO_MUNICIPIO_ESC VARCHAR(200), CO_UF_ESC VARCHAR(200), SG_UF_ESC VARCHAR(200), TP_DEPENDENCIA_ADM_ESC VARCHAR(200), TP_LOCALIZACAO_ESC VARCHAR(200), TP_SIT_FUNC_ESC VARCHAR(200), IN_BAIXA_VISAO VARCHAR(200), IN_CEGUEIRA VARCHAR(200), IN_SURDEZ VARCHAR(200), IN_DEFICIENCIA_AUDITIVA VARCHAR(200), IN_SURDO_CEGUEIRA VARCHAR(200), IN_DEFICIENCIA_FISICA VARCHAR(200), IN_DEFICIENCIA_MENTAL VARCHAR(200), IN_DEFICIT_ATENCAO VARCHAR(200), IN_DISLEXIA VARCHAR(200), IN_DISCALCULIA VARCHAR(200), IN_AUTISMO VARCHAR(200), IN_VISAO_MONOCULAR VARCHAR(200), IN_OUTRA_DEF VARCHAR(200), IN_GESTANTE VARCHAR(200), IN_LACTANTE VARCHAR(200), IN_IDOSO VARCHAR(200), IN_ESTUDA_CLASSE_HOSPITALAR VARCHAR(200), IN_SEM_RECURSO VARCHAR(200), IN_BRAILLE VARCHAR(200), IN_AMPLIADA_24 VARCHAR(200), IN_AMPLIADA_18 VARCHAR(200), IN_LEDOR VARCHAR(200), IN_ACESSO VARCHAR(200), IN_TRANSCRICAO VARCHAR(200), IN_LIBRAS VARCHAR(200), IN_LEITURA_LABIAL VARCHAR(200), IN_MESA_CADEIRA_RODAS VARCHAR(200), IN_MESA_CADEIRA_SEPARADA VARCHAR(200), IN_APOIO_PERNA VARCHAR(200), IN_GUIA_INTERPRETE VARCHAR(200), IN_COMPUTADOR VARCHAR(200), IN_CADEIRA_ESPECIAL VARCHAR(200), IN_CADEIRA_CANHOTO VARCHAR(200), IN_CADEIRA_ACOLCHOADA VARCHAR(200), IN_PROVA_DEITADO VARCHAR(200), IN_MOBILIARIO_OBESO VARCHAR(200), IN_LAMINA_OVERLAY VARCHAR(200), IN_PROTETOR_AURICULAR VARCHAR(200), IN_MEDIDOR_GLICOSE VARCHAR(200), IN_MAQUINA_BRAILE VARCHAR(200), IN_SOROBAN VARCHAR(200), IN_MARCA_PASSO VARCHAR(200), IN_SONDA VARCHAR(200), IN_MEDICAMENTOS VARCHAR(200), IN_SALA_INDIVIDUAL VARCHAR(200), IN_SALA_ESPECIAL VARCHAR(200), IN_SALA_ACOMPANHANTE VARCHAR(200), IN_MOBILIARIO_ESPECIFICO VARCHAR(200), IN_MATERIAL_ESPECIFICO VARCHAR(200), IN_NOME_SOCIAL VARCHAR(200), CO_MUNICIPIO_PROVA VARCHAR(200), NO_MUNICIPIO_PROVA VARCHAR(200), CO_UF_PROVA VARCHAR(200), SG_UF_PROVA VARCHAR(200), TP_PRESENCA_CN VARCHAR(200), TP_PRESENCA_CH VARCHAR(200), TP_PRESENCA_LC VARCHAR(200), TP_PRESENCA_MT VARCHAR(200), CO_PROVA_CN VARCHAR(200), CO_PROVA_CH VARCHAR(200), CO_PROVA_LC VARCHAR(200), CO_PROVA_MT VARCHAR(200), NU_NOTA_CN VARCHAR(200), NU_NOTA_CH VARCHAR(200), NU_NOTA_LC VARCHAR(200), NU_NOTA_MT VARCHAR(200), TX_RESPOSTAS_CN VARCHAR(200), TX_RESPOSTAS_CH VARCHAR(200), TX_RESPOSTAS_LC VARCHAR(200), TX_RESPOSTAS_MT VARCHAR(200), TP_LINGUA VARCHAR(200), TX_GABARITO_CN VARCHAR(200), TX_GABARITO_CH VARCHAR(200), TX_GABARITO_LC VARCHAR(200), TX_GABARITO_MT VARCHAR(200), TP_STATUS_REDACAO VARCHAR(200), NU_NOTA_COMP1 VARCHAR(200), NU_NOTA_COMP2 VARCHAR(200), NU_NOTA_COMP3 VARCHAR(200), NU_NOTA_COMP4 VARCHAR(200), NU_NOTA_COMP5 VARCHAR(200), NU_NOTA_REDACAO VARCHAR(200), Q001 VARCHAR(200), Q002 VARCHAR(200), Q003 VARCHAR(200), Q004 VARCHAR(200), Q005 VARCHAR(200), Q006 VARCHAR(200), Q007 VARCHAR(200), Q008 VARCHAR(200), Q009 VARCHAR(200), Q010 VARCHAR(200), Q011 VARCHAR(200), Q012 VARCHAR(200), Q013 VARCHAR(200), Q014 VARCHAR(200), Q015 VARCHAR(200), Q016 VARCHAR(200), Q017 VARCHAR(200), Q018 VARCHAR(200), Q019 VARCHAR(200), Q020 VARCHAR(200), Q021 VARCHAR(200), Q022 VARCHAR(200), Q023 VARCHAR(200), Q024 VARCHAR(200), Q025 VARCHAR(200), Q026 VARCHAR(200), Q027 VARCHAR(200), primary key(NU_INSCRICAO)) diststyle key distkey(NU_INSCRICAO);

/* Create table for provas */
create table public.provas (NU_INSCRICAO VARCHAR(12), CO_MUNICIPIO_PROVA VARCHAR(7), NO_MUNICIPIO_PROVA VARCHAR(150), CO_UF_PROVA VARCHAR(2), SG_UF_PROVA VARCHAR(2), TP_PRESENCA_CN VARCHAR(1), TP_PRESENCA_CH VARCHAR(1), TP_PRESENCA_LC VARCHAR(1), TP_PRESENCA_MT VARCHAR(1), CO_PROVA_CN VARCHAR(3), CO_PROVA_CH VARCHAR(3), CO_PROVA_LC VARCHAR(3), CO_PROVA_MT VARCHAR(3), NU_NOTA_CN VARCHAR(9), NU_NOTA_CH VARCHAR(9), NU_NOTA_LC VARCHAR(9), NU_NOTA_MT VARCHAR(9), TX_RESPOSTAS_CN VARCHAR(45), TX_RESPOSTAS_CH VARCHAR(45), TX_RESPOSTAS_LC VARCHAR(45), TX_RESPOSTAS_MT VARCHAR(45), TP_LINGUA VARCHAR(1), TX_GABARITO_CN VARCHAR(45), TX_GABARITO_CH VARCHAR(45), TX_GABARITO_LC VARCHAR(50), TX_GABARITO_MT VARCHAR(45), TP_STATUS_REDACAO VARCHAR(1), NU_NOTA_COMP1 VARCHAR(9), NU_NOTA_COMP2 VARCHAR(9), NU_NOTA_COMP3 VARCHAR(9), NU_NOTA_COMP4 VARCHAR(9), NU_NOTA_COMP5 VARCHAR(9), NU_NOTA_REDACAO VARCHAR(9), primary key(NU_INSCRICAO)) diststyle key distkey(NU_INSCRICAO);

/* Create table for dados participantes */
create table public.dadospartic (NU_INSCRICAO VARCHAR(12), NU_ANO VARCHAR(4), CO_MUNICIPIO_RESIDENCIA VARCHAR(7), NO_MUNICIPIO_RESIDENCIA VARCHAR(150), CO_UF_RESIDENCIA VARCHAR(2), SG_UF_RESIDENCIA VARCHAR(2), NU_IDADE VARCHAR(3), TP_SEXO VARCHAR(1), TP_ESTADO_CIVIL VARCHAR(1), TP_COR_RACA VARCHAR(1), TP_NACIONALIDADE VARCHAR(1), CO_MUNICIPIO_NASCIMENTO VARCHAR(7), NO_MUNICIPIO_NASCIMENTO VARCHAR(150), CO_UF_NASCIMENTO VARCHAR(2), SG_UF_NASCIMENTO VARCHAR(2), TP_ST_CONCLUSAO VARCHAR(1), TP_ANO_CONCLUIU VARCHAR(1), TP_ESCOLA VARCHAR(1), TP_ENSINO VARCHAR(1), IN_TREINEIRO VARCHAR(1));

/* Create table for escola */
create table public.escola (NU_INSCRICAO VARCHAR(12), CO_ESCOLA VARCHAR(8), CO_MUNICIPIO_ESC VARCHAR(7), NO_MUNICIPIO_ESC VARCHAR(150), CO_UF_ESC VARCHAR(2), SG_UF_ESC VARCHAR(2), TP_DEPENDENCIA_ADM_ESC VARCHAR(1), TP_LOCALIZACAO_ESC VARCHAR(1), TP_SIT_FUNC_ESC VARCHAR(1));

/* Create table for atendimento especial */
create table public.at_especial (NU_INSCRICAO VARCHAR(12), IN_BAIXA_VISAO VARCHAR(1), IN_CEGUEIRA VARCHAR(1), IN_SURDEZ VARCHAR(1), IN_DEFICIENCIA_AUDITIVA VARCHAR(1), IN_SURDO_CEGUEIRA VARCHAR(1), IN_DEFICIENCIA_FISICA VARCHAR(1), IN_DEFICIENCIA_MENTAL VARCHAR(1), IN_DEFICIT_ATENCAO VARCHAR(1), IN_DISLEXIA VARCHAR(1), IN_DISCALCULIA VARCHAR(1), IN_AUTISMO VARCHAR(1), IN_VISAO_MONOCULAR VARCHAR(1), IN_OUTRA_DEF VARCHAR(1), IN_GESTANTE VARCHAR(1), IN_LACTANTE VARCHAR(1), IN_IDOSO VARCHAR(1), IN_ESTUDA_CLASSE_HOSPITALAR VARCHAR(1), IN_SEM_RECURSO VARCHAR(1), IN_BRAILLE VARCHAR(1), IN_AMPLIADA_24 VARCHAR(1), IN_AMPLIADA_18 VARCHAR(1), IN_LEDOR VARCHAR(1), IN_ACESSO VARCHAR(1), IN_TRANSCRICAO VARCHAR(1), IN_LIBRAS VARCHAR(1), IN_LEITURA_LABIAL VARCHAR(1), IN_MESA_CADEIRA_RODAS VARCHAR(1), IN_MESA_CADEIRA_SEPARADA VARCHAR(1), IN_APOIO_PERNA VARCHAR(1), IN_GUIA_INTERPRETE VARCHAR(1), IN_COMPUTADOR VARCHAR(1), IN_CADEIRA_ESPECIAL VARCHAR(1), IN_CADEIRA_CANHOTO VARCHAR(1), IN_CADEIRA_ACOLCHOADA VARCHAR(1), IN_PROVA_DEITADO VARCHAR(1), IN_MOBILIARIO_OBESO VARCHAR(1), IN_LAMINA_OVERLAY VARCHAR(1), IN_PROTETOR_AURICULAR VARCHAR(1), IN_MEDIDOR_GLICOSE VARCHAR(1), IN_MAQUINA_BRAILE VARCHAR(1), IN_SOROBAN VARCHAR(1), IN_MARCA_PASSO VARCHAR(1), IN_SONDA VARCHAR(1), IN_MEDICAMENTOS VARCHAR(1), IN_SALA_INDIVIDUAL VARCHAR(1), IN_SALA_ESPECIAL VARCHAR(1), IN_SALA_ACOMPANHANTE VARCHAR(1), IN_MOBILIARIO_ESPECIFICO VARCHAR(1), IN_MATERIAL_ESPECIFICO VARCHAR(1), IN_NOME_SOCIAL VARCHAR(1))

/* Create table for questionário socioeconômico */
create table public.quest (NU_INSCRICAO VARCHAR(12), Q001 VARCHAR(1), Q002 VARCHAR(1), Q003 VARCHAR(1), Q004 VARCHAR(2), Q005 VARCHAR(2), Q006 VARCHAR(1), Q007 VARCHAR(1), Q008 VARCHAR(1), Q009 VARCHAR(1), Q010 VARCHAR(1), Q011 VARCHAR(1), Q012 VARCHAR(1), Q013 VARCHAR(1), Q014 VARCHAR(1), Q015 VARCHAR(1), Q016 VARCHAR(1), Q017 VARCHAR(1), Q018 VARCHAR(1), Q019 VARCHAR(1), Q020 VARCHAR(1), Q021 VARCHAR(1), Q022 VARCHAR(1), Q023 VARCHAR(1), Q024 VARCHAR(1), Q025 VARCHAR(1), Q026 VARCHAR(1), Q027 VARCHAR(1));

/* Load data from the CSV file to the first table */
COPY public.dbenem FROM 's3://sagemaker-studio-g94r3spx4fg/MICRODADOS_ENEM_2017.csv' access_key_id '*' secret_access_key '*' CSV DELIMITER ';' STATUPDATE off ACCEPTINVCHARS IGNOREHEADER 1;

/* Create table notas that will be our fact table
I also created a new column called 'nota final' to store the mean of the other 5 scores */
create table public.notas (nu_inscricao varchar(12), nota_ch float, nota_cn float, nota_lc float, nota_mt float, nota_redacao float, nota_final float, primary key(nu_inscricao));

/* Remove rows with blank values in score columns */
delete from public.dbenem where NU_NOTA_CN = '' or NU_NOTA_CH = '' or NU_NOTA_LC = '' or NU_NOTA_MT = '';

/* Delete the one row that did not have a proper numeric value */
delete from public.dbenem where nu_nota_ch = 'NU_NOTA_CH';

/* Insert corrected data into each table - here there is only the example for the table notas
Here we can already change the type of each column with the command cast, here used with the :: operator */
insert into public.provas (nu_inscricao, nota_ch, nota_cn, nota_lc, nota_mt, nota_redacao, nota_final, primary key(nu_inscricao)) select nu_inscricao::float, nota_ch::float, nota_cn::float, nota_lc::float, nota_mt::float, nota_redacao::float, (nu_inscricao::float + nota_ch::float + nota_cn::float + nota_lc::float + nota_mt::float + nota_redacao::float)/5 from public.dbenem;

/* Create table for city data */
create table cities (COD_MUN varchar(10), ESPACIALIDADE varchar(200), GINI float, POPULACAO bigint, IDHM float, IDHMRenda float, IDHMLong float, IDHMEduc float, ID bigint, CD_GEOCODI bigint, TIPO varchar(50), CD_GEOCODB bigint, NM_BAIRRO varchar(200), CD_GEOCODS bigint, NM_SUBDIST varchar(200), CD_GEOCODD bigint, NM_DISTRIT varchar(200), CD_GEOCODM bigint, NM_MUNICIP varchar(200), NM_MICRO varchar(200), NM_MESO varchar(200), NM_UF varchar(200), CD_NIVEL bigint, CD_CATEGOR bigint, NM_CATEGOR varchar(200), NM_LOCALID varchar(200), LONG double precision, LAT double precision, ALT float, GMRotation float, geometry_info varchar(200));

/* Load data into cities table */
COPY public.cities FROM 's3://sagemaker-studio-g94r3spx4fg/df_cities_merge.csv' access_key_id '*' secret_access_key '*' CSV STATUPDATE off ACCEPTINVCHARS IGNOREHEADER 1;
